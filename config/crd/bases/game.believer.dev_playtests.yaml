---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: playtests.game.believer.dev
spec:
  group: game.believer.dev
  names:
    kind: Playtest
    listKind: PlaytestList
    plural: playtests
    singular: playtest
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Playtest is the Schema for the playtests API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PlaytestSpec defines the desired state of Playtest
            properties:
              displayName:
                type: string
              feedbackURL:
                type: string
              groups:
                items:
                  description: |-
                    EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
                    NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
                  properties:
                    name:
                      type: string
                    users:
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              includeReadinessProbe:
                default: false
                description: IncludeReadinessProbe is true if the game server should
                  include a readiness probe
                type: boolean
              map:
                type: string
              minGroups:
                type: integer
              playersPerGroup:
                type: integer
              startTime:
                format: date-time
                type: string
              usersToAutoAssign:
                items:
                  type: string
                type: array
              version:
                type: string
            type: object
          status:
            description: PlaytestStatus defines the observed state of Playtest
            properties:
              groups:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  properties:
                    name:
                      type: string
                    ready:
                      type: boolean
                    serverRef:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    users:
                      items:
                        type: string
                      type: array
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
